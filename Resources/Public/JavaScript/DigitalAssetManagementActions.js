/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
define(["require","exports","jquery","bootstrap"],function(e,t,n){"use strict";var a=function(){function e(){}return e.init=function(){var t=e;console.log(top.TYPO3.lang["localize.wizard.header"]),console.log(top.TYPO3.lang["dam.labels.filesize"]),console.log("DigitalAssetManagement.init"),t.request("getContent","/"),n(".digital-asset-management").on("click",".folder-action",function(){var e=n(this).data("method"),a=n(this).data("parameter");console.log("method: "+e+", par: "+a),t.request(e,a)})},e.renderError=function(e){n(".errorlog").html(e.responseText)},e.renderContent=function(t){var a=e;if(t&&t.request&&n(".errorlog").html(t.request+t.response),t.getContent&&(t.getContent.files||t.getContent.folder)){for(var r="",i=0;i<t.getContent.folders.length;i++){var l=t.getContent.folders[i];l.mimetype="folder",r+=a.replaceTemplateVars(a.folderPartial,l)}n(".folders").html(r),r="";for(i=0;i<t.getContent.files.length;i++){var o=t.getContent.files[i];o.mimetype=o.mimetype.replace("/"," "),r+=a.replaceTemplateVars(a.filePartial,o)}n(".files").html(r)}},e.renderBreadcrumb=function(t){var a,r,i="",l="",o=[],s=e;if(console.log("renderBreadCrumb"),console.log(t),t.getContent){o=(r={identifier:t.actionparam}).identifier.split("/"),console.log(o);for(var d=0;d<o.length;d++){var c=o[d];0===d?(l="/",a="Dateien"):(l+="/"+c,a=c,i+="&nbsp;&gt;&nbsp;"),console.log("render breadcrumb identifier: "+r.identifier+", path: "+l+", part: "+c),i+=s.replaceTemplateVars(s.breadcrumbPartial,{pathsegment:l,part:c,label:a})}i&&n(".breadcrumb").html(i),t.getContent.files.length?n(".files").removeClass("empty"):n(".files").addClass("empty"),t.getContent.folders.length?n(".folders").removeClass("empty"):n(".folders").addClass("empty")}},e.request=function(t,a){var r=e,i={};i[t]=a,n.getJSON(TYPO3.settings.ajaxUrls.dam_request,i).done(function(e){switch(t){case"getContent":r.renderBreadcrumb(e),r.renderContent(e);break;default:top.TYPO3.Notification.warning("Request failed","Unknown method: "+t)}}).fail(function(e){console.log("DigitalAssetManagement request promise fail "+JSON.stringify(e)),top.TYPO3.Notification.warning("Request failed","Content can not be displayed. "+e.readyState),r.renderError(e)})},e.replaceTemplateVars=function(e,t){return e.replace(/{([:a-zA-Z_\.-]*)}/g,function(e,n){return 0===n.indexOf("lll:")?TYPO3.lang[n.replace(/lll:/,"")]||n:t.hasOwnProperty(n)?t[n]:"###missing prop:"+n+"#"})},e.folderPartial='    <div class="card folder-action d-inline-block {mimetype}" data-method="getContent" data-parameter="{identifier}" style="width: 180px;">\n   <div class="icon folder-icon icon-apps-filetree-folder"></div>   <div class="card-body">\n   <h5 class="card-title">{name}</h5>\n    <p class="card-text">&nbsp;</p>\n    </div>\n  </div>\n',e.filePartial='<div class="card d-inline-block {mimetype}" style="width: 180px;">\n    <div class="icon icon-mimetypes-{mimetype}"></div>    <div class="card-body">\n    <h5 class="card-title">{name}</h5>\n    <p class="card-text">{lll:dam.labels.filesize}: {size} <br>{lll:dam.labels.modified}: {modification_date}</p>\n    <a href="#" class="btn btn-primary">Go somewhere</a>\n    </div>\n  </div>\n',e.breadcrumbPartial='<span class="folder-action" data-method="getContent" data-parameter="{pathsegment}">{label}</span>',e}();return n(a.init),TYPO3.DigitalAssetManagementActions=a,a});